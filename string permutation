#include <iostream>
#include <string>
#include <algorithm>
using namespace std;
class permutationString {
    public:
        string s;
        
        string sorting(void);
        bool permutation(permutationString ps);
        void sets1(string str1);
        int length(void);
};

string permutationString:: sorting(){
    sort(s.begin(),s.end());
    return s;
    }
int permutationString::length(){
    return s.length();
    }
    
bool permutationString::permutation(permutationString ps){
    if(this->length()!=ps.length()){
        return false;
    }
    else if (this->length()==ps.length()){
        return true;}
    else return false;}
void permutationString::sets1(string str1){
    s=str1;
}


int main()
{
  permutationString ps1,ps2;
  string s,str;
  cout<<"enter your string";
  cin>>s;
  ps1.sets1(s);
  string sorted=ps1.sorting();
  cout<<"enter second string to be sorted";
  cin>>str;
  ps2.sets1(str);
  string sorted2=ps2.sorting();
  bool ispermutated= ps1.permutation(ps2);
  if (ispermutated==0){
      cout<<"not permutations of each other";
  }
  else{
    cout<<"permutation of each other";}
}
